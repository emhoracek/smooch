{"mappings":"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","sources":["javascript/fkissAction.js","javascript/fkissEvent.js","javascript/kissCel.js","javascript/kissObject.js","javascript/logger.js","javascript/kissDoll.js","javascript/dragAndDrop.js","javascript/doll.js"],"sourcesContent":["function makeAction (a, doll) {\n  const actionMap = {\n    altmap: mkAltmap,\n    map: mkMap,\n    sound: mkSound,\n    timer: mkTimer,\n    unmap: mkUnmap\n    /*\n    changecol\n    changeset\n    move\n    nop\n    shell\n    sound\n    transparent\n    unmap\n    viewport\n    windowsize\n    */\n  }\n\n  const mkAction = actionMap[a.action]\n\n  if (mkAction) {\n    return mkAction(a.args, doll)\n  }\n  doll.logger.warn(`Unknown action \"${a.action}\"`)\n}\n\nfunction mkTimer (args, doll) {\n  const alarmId = args[0]\n  const duration = args[1]\n  return () => {\n    doll.logger.debug(`Setting timer ${alarmId} for ${duration}ms`)\n    const currentTimeout = doll.timers[alarmId].timeout\n    if (currentTimeout) {\n      clearTimeout(currentTimeout)\n    }\n    const timeout = setTimeout(() => {\n      doll.timers[alarmId].timeout = false\n      doll.timers[alarmId].callback()\n    }, duration)\n\n    doll.timers[alarmId].timeout = timeout\n  }\n}\n\nfunction mkMap (args, doll) {\n  const objOrCel = objOrCelArg(args[0], doll)\n  if (objOrCel) {\n    return objOrCel.map.bind(objOrCel)\n  }\n}\n\nfunction mkUnmap (args, doll) {\n  const objOrCel = objOrCelArg(args[0], doll)\n  if (objOrCel) {\n    return objOrCel.unmap.bind(objOrCel)\n  }\n}\n\nfunction mkSound (args, doll) {\n  const soundFile = args[0]\n  const wavFile = soundFile.replace('.au', '.wav')\n  const audioElement = document.getElementById(wavFile.replace('.wav', ''))\n  return () => audioElement.play()\n}\n\nfunction mkAltmap (args, doll) {\n  const objOrCel = objOrCelArg(args[0], doll)\n  if (objOrCel) {\n    return objOrCel.altmap.bind(objOrCel)\n  }\n}\n\nfunction objOrCelArg (arg, doll) {\n  if (typeof arg === 'number') {\n    const obj = doll.getObject(arg)\n    if (obj) {\n      return obj\n    } else {\n      doll.logger.warn(`Unable to find object with mark \"#${arg}\"`)\n    }\n  }\n  if (arg.endsWith('.cel')) {\n    const cel = doll.getCel(arg)\n    if (cel) {\n      return cel\n    } else {\n      doll.logger.warn(`Unable to find cel with filename \"${arg}\"`)\n    }\n  }\n  doll.logger.error(`Expected a cel or object reference but got \"${arg}\"`)\n}\n\nexport { makeAction, objOrCelArg }\n","import { makeAction, objOrCelArg } from './fkissAction'\n\nfunction addEvent (eventJson, doll) {\n  const setEvent = eventMap[eventJson.event]\n\n  if (setEvent) {\n    const actions = eventJson.actions.map(a => makeAction(a, doll)).filter(e => e !== undefined)\n    setEvent(eventJson.args, actions, doll)\n  } else {\n    doll.logger.warn(`Unknown event \"${eventJson.event}\"`)\n  }\n}\n\nconst eventMap = {\n  alarm: setAlarm,\n  begin: setBegin,\n  catch: setCatch,\n  drop: setDrop,\n  col: setCol,\n  end: setEnd,\n  fixcatch: setFixcatch,\n  fixdrop: setFixdrop,\n  initialize: setInitialize,\n  never: setNever,\n  press: setPress,\n  release: setRelease,\n  set: setSet,\n  unfix: setUnfix\n}\n\n// Notes on each event are from Tigger's FKiSS reference: http://tigger.orpheusweb.co.uk/KISS/fkref4.html\n\n// A timer reaches zero.\nfunction setAlarm (args, actions, doll) {\n  const index = args[0]\n  doll.timers[index] = {\n    timeout: false,\n    callback: () => {\n      actions.forEach(f => f())\n\n      doll.update()\n      doll.draw()\n    }\n  }\n}\n\n// This event is triggered after the initialize event and before the version event.\nfunction setBegin (args, actions, doll) {\n  doll.addEventListener('begin', (e) => actions.forEach(f => f()))\n}\n\n// The user clicks on the object or cel. Applies to all cels & objects except those with a maximal fix value.\nfunction setCatch (args, actions, doll) {\n  const objOrCel = objOrCelArg(args[0], doll)\n  objOrCel.addEventListener('catch', (e) => actions.forEach(f => f()))\n}\n\n// The user changes the palette to that specified\nfunction setCol (args, actions, doll) {\n  doll.logger.warn(\"Not implemented: `col`. Smooch doesn't implement palette groups.\")\n}\n\n// The user releases the mouse on the object or cel. Applies to all cels & objects except those with a maximal fix value.\nfunction setDrop (args, actions, doll) {\n  const objOrCel = objOrCelArg(args[0], doll)\n  objOrCel.addEventListener('drop', (e) => actions.forEach(f => f()))\n}\n\n// The user quits the player or closes the doll\nfunction setEnd (args, actions, doll) {\n  doll.logger.warn('Not implemented: `end`. The browser environment makes this event impractical.')\n}\n\n// The user clicks on the object or cel. Applies only to fixed cels & objects\nfunction setFixcatch (args, actions, doll) {\n  const objOrCel = objOrCelArg(args[0], doll)\n  objOrCel.addEventListener('fixcatch', (e) => actions.forEach(f => f()))\n}\n\n// The user releases the mouse on the object or cel. Applies only to fixed cels & objects\nfunction setFixdrop (args, actions, doll) {\n  const objOrCel = objOrCelArg(args[0], doll)\n  objOrCel.addEventListener('fixdrop', (e) => actions.forEach(f => f()))\n}\n\n// Before the doll is displayed after loading\nfunction setInitialize (args, actions, doll) {\n  doll.addEventListener('initialize', (e) => actions.forEach(f => f()))\n}\n\n// This event is never triggered. Intended for debugging purposes during doll development.\nfunction setNever () {\n  // nothing happens :)\n}\n\n// The user clicks on the object or cel.\nconst press = new CustomEvent('press')\nfunction setPress (args, actions, doll) {\n  const objOrCel = objOrCelArg(args[0], doll)\n  if (objOrCel) {\n    objOrCel.addEventListener('press', (e) => actions.forEach(f => {\n      if (f) { f() }\n    }))\n  }\n}\n\n// The user releases the object or cel.\nfunction setRelease (args, actions, doll) {\n  const objOrCel = objOrCelArg(args[0], doll)\n  objOrCel.addEventListener('release', (e) => actions.forEach(f => f()))\n}\n\n// The user changes the specified set\nfunction setSet (args, actions, doll) {\n  const set = args[0]\n  doll.addEventListener(`set-${set}`, (e) => actions.forEach(f => f()))\n}\n\n// A previously-fixed cel or object becomes free to move.\nfunction setUnfix (args, actions, doll) {\n  doll.logger.warn(\"Not implemented: `unfix`. Smooch doesn't (currently) decrement fix.\")\n}\n\nexport { addEvent, press }\n","// A KiSS Cel represents each instance of an image appearing in the\n// doll. It doesn't represent the image file itself. So a single\n// image can appear multiple times in multiple objects as different\n// KiSSCels\nclass KiSSCel extends EventTarget {\n  constructor (obj, cel, set, incLoaded) {\n    super()\n\n    this.name = cel.name\n    this.mark = cel.mark\n    this.id = cel.name\n    this.fix = cel.fix\n    this.position = obj.positions[0]\n    this.positions = obj.positions\n    this.sets = cel.sets\n    this.image = document.getElementById(cel.name + '-' + cel.palette)\n    this.ghostImage = undefined\n    this.visible = false\n    this.mapped = true\n    this.alpha = cel.alpha\n    this.currentSet = 0\n\n    this.offset = cel.offset\n\n    this.init(set)\n\n    // Let Smooch know when image is loaded\n    this.ghostImage.onload = function () {\n      incLoaded()\n    }\n\n    return this\n  }\n\n  init (set) {\n    const drawctxt = set.ctxt\n    const drawcanvas = set.canvas\n    const image = this.image\n\n    // Draw image to ctxt and get image data\n    drawctxt.drawImage(image, 0, 0, image.width, image.height)\n\n    const ghostImageData = drawctxt.getImageData(0, 0, image.width, image.height)\n    const data = ghostImageData.data\n\n    // Fill ghost image data with obj color\n    const color = decimalToRgb(this.mark)\n    for (let k = 0; k < data.length; k = k + 4) {\n      data[k] = color.red\n      data[k + 1] = color.green\n      data[k + 2] = color.blue\n    }\n\n    // Clear ctxt and draw altered image\n    drawctxt.clearRect(0, 0, set.size.x, set.size.y)\n    drawctxt.putImageData(ghostImageData, 0, 0)\n\n    // Save altered image as cel's ghost image\n    this.ghostImage = new Image()\n    this.ghostImage.src = drawcanvas.toDataURL('image/png')\n\n    // Clear ctxt\n    drawctxt.clearRect(0, 0, set.size.x, set.size.y)\n  }\n\n  update (currentSet) {\n    this.currentSet = currentSet\n    if (this.sets.indexOf(currentSet) === -1 || !this.mapped) {\n      this.visible = false\n    } else {\n      this.visible = true\n    }\n    this.position = this.positions[currentSet]\n  }\n\n  draw (screen, ghost) {\n    if (this.visible === true) {\n      if (this.alpha) {\n        screen.globalAlpha = (255 - this.alpha) / 255\n      }\n\n      screen.drawImage(\n        this.image,\n        this.position.x + this.offset.x,\n        this.position.y + this.offset.y\n      )\n\n      screen.globalAlpha = 1\n\n      ghost.drawImage(\n        this.ghostImage,\n        this.position.x + this.offset.x,\n        this.position.y + this.offset.y\n      )\n    }\n  }\n\n  altmap () {\n    this.mapped = !this.mapped\n  }\n\n  map () {\n    this.mapped = true\n  }\n\n  unmap () {\n    this.mapped = false\n  }\n}\n\n// thanks to DrBracewell#0252 on The Coding Den Discord\nfunction decimalToRgb (n) {\n  return {\n    red: (n & 0xff0000) >> 16,\n    green: (n & 0x00ff00) >> 8,\n    blue: (n & 0x0000ff)\n  }\n}\n\nexport { KiSSCel }\n","class KiSSObject extends EventTarget {\n  constructor (mark, positions) {\n    super()\n\n    this.mark = mark\n    this.id = mark\n    this.currentSet = 0\n    this.positions = positions\n    this.cels = []\n\n    return this\n  }\n\n  update (currentSet) {\n    this.currentSet = currentSet\n    for (let i = 0; i < this.cels.length; i++) {\n      this.cels[i].update(currentSet)\n    }\n  }\n\n  get position () {\n    return this.positions[this.currentSet]\n  }\n\n  get fixed () {\n    return this.cels.some(c => c.fix > 0)\n  }\n\n  setPosition (x, y) {\n    this.positions[this.currentSet].x = x\n    this.positions[this.currentSet].y = y\n  }\n\n  altmap () {\n    this.cels.forEach(cel => { cel.altmap() })\n  }\n\n  map () {\n    this.cels.forEach(cel => cel.map())\n  }\n\n  unmap () {\n    this.cels.forEach(cel => cel.unmap())\n  }\n}\n\nexport { KiSSObject }\n","class Logger {\n  constructor (logLevel) {\n    if (['debug', 'warning', 'error'].includes(logLevel)) {\n      this.logLevel = logLevel\n    } else {\n      this.logLevel = 'none'\n    }\n  }\n\n  debug (msg) {\n    if (this.logLevel !== 'none') {\n      console.log(msg)\n    }\n  }\n\n  warn (msg) {\n    if (this.logLevel !== 'none' && this.logLevel !== 'debug') {\n      console.log(msg)\n    }\n  }\n\n  error (msg) {\n    if (this.logLevel === 'error') {\n      console.log(msg)\n    }\n  }\n}\n\nexport { Logger }\n","import { addEvent } from './fkissEvent'\nimport { KiSSCel } from './kissCel'\nimport { KiSSObject } from './kissObject'\nimport { Logger } from './logger'\n\nclass KiSSDoll extends EventTarget {\n  constructor (kissData, incLoaded) {\n    super()\n\n    this.logger = new Logger('debug')\n\n    // Size of the play area.\n    this.size = { x: kissData.window_size[0], y: kissData.window_size[1] }\n\n    // Set up border area (around the playarea)\n    const borderarea = document.getElementById('borderarea')\n    borderarea.style.background = kissData.border\n\n    // Set up play area\n    const playarea = document.getElementById('playarea')\n    playarea.style.width = this.size.x + 'px'\n    playarea.style.height = this.size.y + 'px'\n    playarea.style.background = kissData.background\n\n    // Set up canvases\n    this.initCanvases(this.size)\n\n    // Initialize current set\n    this.currentSet = 0\n\n    // Initialize objs and cels\n    this.objs = []\n    this.cels = []\n    this.timers = []\n    this.init(kissData.cels, kissData.positions, incLoaded)\n    initSetClicks(this)\n\n    this.initFKiSS(kissData.fkiss)\n    this.dispatchEvent(new CustomEvent('initialize'))\n\n    // Update and draw\n    this.update()\n    this.draw()\n\n    this.dispatchEvent(new CustomEvent('begin'))\n\n    return this\n  }\n\n  init (cnfCels, cnfPositions, incLoaded) {\n    /* Cels have to be kept in a separate list from the objects.\n        This is because objects are the things that get dragged, change\n        position, etc. But cels are the things that are drawn, and they have\n        to be drawn in a certain order to get the right layering effect. */\n\n    cnfCels.reverse()\n\n    cnfCels.forEach(cnfCel => {\n      // Objects are indexed by their \"mark\". This is what groups cels together.\n      // First check if there's already an object with that mark.\n      const existingObj = this.objs[cnfCel.mark]\n      if (existingObj) {\n        // If object already exists, create a cel that points to that object.\n        const newCel = new KiSSCel(existingObj, cnfCel, this, incLoaded)\n        // Add the new cel to the object's list of cels.\n        existingObj.cels.push(newCel)\n        // Add the new cel to the doll's list of cels.\n        this.cels.push(newCel)\n      } else {\n        // If the object doesn't already exist, we need to create it.\n\n        // Create the new object and new cel\n        const newObj = new KiSSObject(cnfCel.mark, cnfPositions.map(sp => sp.positions[cnfCel.mark] || { x: 0, y: 0 }))\n        const newCel = new KiSSCel(newObj, cnfCel, this, incLoaded)\n        // Add the new cel to the object's list of cels.\n        newObj.cels.push(newCel)\n        // Add the object to the doll's list of objects.\n        this.objs[cnfCel.mark] = newObj\n        // Add the cel to the doll's list of cels.\n        this.cels.push(newCel)\n      }\n    })\n  }\n\n  initCanvases (size) {\n    const drawcanvas = document.getElementById('screen')\n    setCanvasSize(drawcanvas, size)\n\n    const ghostcanvas = document.getElementById('ghost')\n    setCanvasSize(ghostcanvas, size)\n\n    this.canvas = drawcanvas\n    this.ctxt = drawcanvas.getContext('2d')\n    this.ghost = ghostcanvas.getContext('2d')\n\n    drawcanvas.addEventListener('touchstart', function (event) { event.preventDefault() })\n    drawcanvas.addEventListener('touchmove', function (event) { event.preventDefault() })\n    drawcanvas.addEventListener('touchend', function (event) { event.preventDefault() })\n    drawcanvas.addEventListener('touchcancel', function (event) { event.preventDefault() })\n  }\n\n  getSelectedObject (pos) {\n    const pixel = this.ghost.getImageData(pos.x, pos.y, 1, 1)\n    const data = pixel.data\n    const mark = rgbToDecimal(data[0], data[1], data[2])\n    const alpha = data[3]\n\n    if (alpha === 0) {\n      console.log('not draggable')\n    } else {\n      const obj = this.objs[mark]\n      return obj\n    }\n  }\n\n  getObjectPosition (obj) {\n    return obj.positions[this.currentSet]\n  }\n\n  getCel (celName) {\n    return this.cels.find(c => (c.name + '.cel') === celName)\n  }\n\n  getObject (objMark) {\n    return this.objs[objMark]\n  }\n\n  moveObject (obj, x, y) {\n    obj.setPosition(x, y)\n\n    this.update()\n    this.draw()\n  }\n\n  initFKiSS (events) {\n    events.forEach(e => {\n      addEvent(e, this)\n    })\n  }\n\n  update (newSet) {\n    // Update current set if new set is given\n    if (typeof newSet !== 'undefined') { this.currentSet = newSet }\n\n    // Update cels\n    for (let i = 0; i < this.objs.length; i++) {\n      // have to check if object exists first, because we are using\n      // the object id (\"mark\") as the index for the array, so\n      // many indexes are skipped.\n      if (this.objs[i]) {\n        this.objs[i].update(this.currentSet)\n      }\n    }\n  }\n\n  draw () {\n    this.ctxt.clearRect(0, 0, this.size.x, this.size.y)\n    this.ghost.clearRect(0, 0, this.size.x, this.size.y)\n    for (let i = 0; i < this.cels.length; i++) {\n      if (this.cels[i]) {\n        this.cels[i].draw(this.ctxt, this.ghost)\n      }\n    }\n  }\n}\n\nfunction initSetClicks (doll) {\n  // Add click events to set numbers\n  const sets = document.getElementsByClassName('set')\n  for (let i = 0; i < sets.length; i++) {\n    // when a number is clicked, update doll to new set\n    sets[i].addEventListener('click', function () {\n      const newSet = parseInt(this.innerHTML)\n      doll.update(newSet)\n      doll.draw()\n      updateSets(doll.currentSet)\n    })\n  }\n\n  const tip = document.getElementsByClassName('tip')[0]\n  const openTip = document.getElementById('open-tip')\n  openTip.addEventListener('click', e => {\n    tip.style.display = 'block'\n  })\n  const closeTip = document.getElementById('close-tip')\n  closeTip.addEventListener('click', e => {\n    tip.style.display = 'none'\n  })\n}\n\nfunction updateSets (currentSet) {\n  // Update set listing to highlight current set\n  const sets = document.getElementsByClassName('set')\n  for (let i = 0; i < sets.length; i++) {\n    if (currentSet === parseInt(sets[i].innerHTML)) {\n      sets[i].style.color = 'black'\n    } else {\n      sets[i].style.color = 'grey'\n    }\n  }\n}\n\nfunction setCanvasSize (canvas, size) {\n  canvas.style.width = size.x + 'px'\n  canvas.style.height = size.y + 'px'\n  canvas.width = size.x\n  canvas.height = size.y\n}\n\nfunction rgbToDecimal (r, g, b) {\n  return (r << 16) + (g << 8) + b\n}\n\nexport { KiSSDoll }\n","import { press } from './fkissEvent'\n\nclass DragAndDrop {\n  constructor (doll) {\n    this.dragHandler = false\n    this.doll = doll\n    this.screen = document.getElementById('screen')\n    const canvas = document.getElementById('ghost')\n    this.ctxt = canvas.getContext('2d')\n  }\n\n  initialize () {\n    document.addEventListener('pointerdown', (e) => this.onMouseDown(e))\n    document.addEventListener('pointerup', () => {\n      if (this.dragHandler) {\n        document.removeEventListener('pointermove', this.dragHandler)\n        this.dragHandler = false\n      }\n    })\n  }\n\n  onMouseDown (e) {\n    const pos = this.getMousePos(e)\n    const obj = this.doll.getSelectedObject(pos)\n    if (obj) {\n      obj.dispatchEvent(press)\n      obj.cels.forEach(c => {\n        c.dispatchEvent(press)\n      })\n      if (!obj.fixed) {\n        const dragStart = this.getDragStart(obj, pos)\n        this.dragHandler = (e) => this.onMouseMove(e, obj, dragStart)\n        document.addEventListener('pointermove', this.dragHandler)\n        e.preventDefault()\n      }\n    }\n  }\n\n  getDragStart (obj, pos) {\n    const objectPosition = this.doll.getObjectPosition(obj)\n    return {\n      x: objectPosition.x - pos.x,\n      y: objectPosition.y - pos.y\n    }\n  }\n\n  onMouseMove (e, obj, dragStart) {\n    const currentMousePosition = this.getMousePos(e)\n    const x = dragStart.x + currentMousePosition.x\n    const y = dragStart.y + currentMousePosition.y\n\n    this.doll.moveObject(obj, x, y)\n\n    e.preventDefault()\n  }\n\n  // from http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n  getMousePos (evt) {\n    const rect = this.screen.getBoundingClientRect()\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top\n    }\n  }\n}\n\nexport { DragAndDrop }\n","import { KiSSDoll } from './kissDoll'\nimport { DragAndDrop } from './dragAndDrop'\n\nwindow.addEventListener('load', function () {\n  /* globals kissJson, globalKiss */\n  let loaded = 0\n  const totalCels = kissJson.cels.length\n  const doll = new KiSSDoll(kissJson, () => { loaded += 1 })\n  const dragger = new DragAndDrop(doll)\n  dragger.initialize()\n\n  function checkLoaded () {\n    if (loaded < totalCels) {\n      console.log(`loading ${loaded} of ${totalCels}`)\n      window.setTimeout(checkLoaded, 500)\n    }\n  }\n\n  // in testing and development, it's convenient to have access to\n  // to the kiss set object\n  if (typeof globalKiss !== 'undefined') {\n    // eslint-disable-next-line no-global-assign\n    globalKiss = doll\n  }\n\n  window.setTimeout(checkLoaded, 500)\n})\n"],"names":["$c7ad0c18854a624b$var$mkTimer","args","doll","alarmId","duration","logger","debug","currentTimeout","timers","timeout","clearTimeout","setTimeout","callback","$c7ad0c18854a624b$var$mkMap","objOrCel","$c7ad0c18854a624b$export$febf76ff2fd5620a","map","bind","$c7ad0c18854a624b$var$mkUnmap","unmap","$c7ad0c18854a624b$var$mkSound","wavFile","replace","audioElement","document","getElementById","play","$c7ad0c18854a624b$var$mkAltmap","altmap","arg","obj","getObject","warn","endsWith","cel","getCel","error","$b05d70e962dae78c$export$f531f92e2a15358f","eventJson","setEvent","$b05d70e962dae78c$var$eventMap","event","actions","a","mkAction","sound","timer","action","$c7ad0c18854a624b$export$d41d8024b2c8bb62","filter","e","undefined","alarm","index","forEach","f","update","draw","begin","addEventListener","catch","drop","col","end","fixcatch","fixdrop","initialize","never","press","release","set","unfix","$b05d70e962dae78c$export$dbe9198142dace0c","CustomEvent","$d7cb66b891d16539$export$fc4b60b88d5c7598","EventTarget","incLoaded","super","this","name","mark","id","fix","position","positions","sets","image","palette","ghostImage","visible","mapped","alpha","currentSet","offset","init","onload","drawctxt","ctxt","drawcanvas","canvas","drawImage","width","height","ghostImageData","getImageData","data","color","red","n","green","blue","k","length","clearRect","size","x","y","putImageData","Image","src","toDataURL","indexOf","screen","ghost","globalAlpha","$048c9435de6bb329$export$c76ef8c1aa23eb5b","cels","i","fixed","some","c","setPosition","$cb3100c78e3ec5ea$export$efa9a398d6368992","logLevel","includes","msg","console","log","$e30bceaf9ca041da$export$92944dc530d5048e","kissData","window_size","style","background","border","playarea","initCanvases","objs","getElementsByClassName","newSet","parseInt","innerHTML","$e30bceaf9ca041da$var$updateSets","tip","display","$e30bceaf9ca041da$var$initSetClicks","initFKiSS","fkiss","dispatchEvent","cnfCels","cnfPositions","reverse","cnfCel","existingObj","newCel","push","newObj","sp","$e30bceaf9ca041da$var$setCanvasSize","ghostcanvas","getContext","preventDefault","getSelectedObject","pos","r","g","b","getObjectPosition","celName","find","objMark","moveObject","events","$a40f01e2974c8bb3$export$a4c936d95bae1613","dragHandler","onMouseDown","removeEventListener","e1","getMousePos","dragStart","getDragStart","onMouseMove","objectPosition","currentMousePosition","evt","rect","getBoundingClientRect","clientX","left","clientY","top","window","loaded","totalCels","kissJson","globalKiss","checkLoaded"],"version":3,"file":"index.17ea7609.js.map"}